<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Julia Posts  on Stamatis Vretinaris</title>
    <link>http://localhost:1313/julia/</link>
    <description>Recent content in Julia Posts  on Stamatis Vretinaris</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 May 2024 20:22:07 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/julia/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Empty</title>
      <link>http://localhost:1313/julia/empty/</link>
      <pubDate>Sat, 25 May 2024 20:22:07 -0400</pubDate>
      <guid>http://localhost:1313/julia/empty/</guid>
      <description>aSDFASDFASD</description>
    </item>
    <item>
      <title>Packages in Julia</title>
      <link>http://localhost:1313/julia/packages/</link>
      <pubDate>Sat, 25 May 2024 18:51:48 -0400</pubDate>
      <guid>http://localhost:1313/julia/packages/</guid>
      <description>Packages in Julia When experimenting and writing new code a package structure seems to be an overkill, but as a project matures the package structure provides some advantages (imho).&#xA;First let us look how a package MyPackage looks like in Julia&#xA;&amp;gt; ls MyPackage .git .github/workflows docs src test .gitignore LICENSE Project.toml Manifest.toml README.md /src ls /src MyPackage.jl its the folder where your code will live. In a newly initiallized package there will be always the file MyPackage.</description>
    </item>
  </channel>
</rss>
